<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.feng.mapper.ArticleMapper">

    <select id="listArticleBacks" resultType="com.feng.pojo.dto.ArticleDTO">
        SELECT
        a.id,
        article_cover,
        article_title,
        type,
        is_top,
        a.is_delete,
        a.price,
        a.status,
        a.create_time,
        category_name
        FROM
        (
        SELECT
        id,
        article_cover,
        article_title,
        type,
        price,
        is_top,
        is_delete,
        status,
        create_time,
        category_id
        FROM
        tb_article
        <where>
            is_delete = #{condition.isDelete}
            <if test="condition.keywords != null">
                and article_title like concat('%',#{condition.keywords},'%')
            </if>
            <if test="condition.status != null">
                and status = #{condition.status}
            </if>
            <if test="condition.categoryId != null">
                and category_id = #{condition.categoryId}
            </if>
            <if test="condition.type != null">
                and type = #{condition.type}
            </if>
            <if test="condition.tagId != null">
                and id in
                (
                SELECT
                article_id
                FROM
                tb_article_tag
                WHERE
                tag_id = #{condition.tagId}
                )
            </if>
        </where>
        ORDER BY
          is_top DESC,
          id DESC
        ) a
        LEFT JOIN tb_category c ON a.category_id = c.id
        LEFT JOIN tb_article_tag atg ON a.id = atg.article_id
		GROUP BY
		a.id
        ORDER BY
          is_top DESC,
          a.id DESC
    </select>

    <select id="listArticles" resultType="com.feng.pojo.dto.ArticleHomeDTO">
    SELECT
	 a.id,
	 article_cover,
	 article_title,
     SUBSTR( article_content, 1, 500 ) AS article_content,
	 a.create_time,
     a.type,
	 a.is_top,
	 a.category_id,
	 category_name,
	 t.id AS tag_id,
	 t.tag_name
     FROM
	 (
	 SELECT
		id,
		article_cover,
		article_title,
		article_content,
	    type,
		is_top,
		create_time,
		category_id
	    FROM
 		tb_article
 		WHERE is_delete = 0
        AND status = 1
		ORDER BY
         is_top DESC,
		 id DESC
		LIMIT 0, 10
	 ) a
	 JOIN tb_category c ON a.category_id = c.id
	 JOIN tb_article_tag atg ON a.id = atg.article_id
	 JOIN tb_tag t ON t.id = atg.tag_id
	 GROUP BY a.id
	 ORDER BY
	   a.is_top DESC,
	   a.id DESC
    </select>

    <select id="listArticleByCondition" resultType="com.feng.pojo.dto.ArticlePreviewDTO">
        SELECT
        a.id,
        article_cover,
        article_title,
        a.create_time,
        a.category_id,
        category_name,
        t.id AS tag_id,
        t.tag_name
        FROM
        (
        SELECT
        id,
        article_cover,
        article_title,
        article_content,
        create_time,
        category_id
        FROM
        tb_article
        <where>
            <if test="condition.categoryId != null">
                category_id = #{condition.categoryId}
            </if>
            <if test="condition.tagId != null">
                id IN (
                SELECT
                article_id
                FROM
                tb_article_tag
                WHERE
                tag_id = #{condition.tagId})
            </if>
        </where>
        AND is_delete = 0
        AND status = 1
        ORDER BY id DESC
        ) a
        JOIN tb_category c ON a.category_id = c.id
        JOIN tb_article_tag atg ON a.id = atg.article_id
        JOIN tb_tag t ON t.id = atg.tag_id
        GROUP BY a.id
    </select>
    <select id="recommendArticleList" resultType="com.feng.pojo.dto.ArticleRecommendDTO">
        SELECT
          id,
          article_title,
          article_cover,
          create_time
        FROM
            (
              SELECT DISTINCT
                article_id
                FROM
                 ( SELECT tag_id FROM tb_article_tag WHERE article_id = #{articleId} ) t
                 JOIN tb_article_tag t1 ON t.tag_id = t1.tag_id
                 WHERE
                 article_id != #{articleId}
            ) t2
               JOIN tb_article a ON t2.article_id = a.id
           WHERE a.is_delete = 0
           ORDER BY
           is_top DESC,id DESC
           LIMIT 6
    </select>

    <select id="getArticleById" resultType="com.feng.pojo.dto.ArticleFrontByIdDTO">
    SELECT
     a.id,
     article_cover,
     article_title,
     article_content,
     a.price,
     a.type,
     a.original_url,
     a.create_time,
     a.update_time,
     a.category_id,
     category_name
     FROM
     tb_article a
     JOIN tb_category c ON a.category_id = c.id
     JOIN tb_article_tag atg ON a.id = atg.article_id
     JOIN tb_tag t ON t.id = atg.tag_id
     WHERE
     a.id = #{articleId}
     AND a.is_delete = 0
     AND a.status = 1
     group by a.id
    </select>

    <select id="listArticleStatistics" resultType="com.feng.pojo.dto.ArticleStatisticsDTO">
        SELECT
            DATE_FORMAT( create_time, "%Y-%m-%d" ) AS date,
            COUNT( 1 ) AS count
        FROM
            tb_article
        GROUP BY
            date
        ORDER BY
            date DESC
    </select>
</mapper>
